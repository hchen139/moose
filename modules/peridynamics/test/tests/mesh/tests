[Tests]
  [./center_crack]
    type = 'Exodiff'
    input = '2D_center_crack.i'
    cli_args = '--mesh-only'
    exodiff = '2D_center_crack_in.e'
    recover = false
    map = false
    requirement = 'PeridynamicsMesh shall generate peridynamic mesh with
                   pre-existing center crack.'
    design = 'modules/peridynamics/PeridynamicsMesh.md'
    issues = '#11561'
  [../]

  [./double_edged_cracks]
    type = 'Exodiff'
    input = '2D_double_edged_cracks.i'
    cli_args = '--mesh-only'
    exodiff = '2D_double_edged_cracks_in.e'
    recover = false
    map = false
    requirement = 'PeridynamicsMesh shall generate peridynamic mesh with
                   pre-existing double edged cracks.'
    design = 'modules/peridynamics/PeridynamicsMesh.md'
    issues = '#11561'
  [../]

  [./2D_convert_one]
    type = 'Exodiff'
    input = '2D_convert_one.i'
    cli_args = '--mesh-only'
    exodiff = '2D_convert_one_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate peridynamic mesh for given
                   mesh block and delete the converted FE mesh.'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#11561'
  [../]

  [./2D_convert_one_retain]
    type = 'Exodiff'
    input = '2D_convert_one_retain.i'
    cli_args = '--mesh-only'
    exodiff = '2D_convert_one_retain_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate peridynamic mesh for given
                   mesh block and retain the converted FE mesh.'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#11561'
  [../]

  [./2D_convert_all_retain]
    type = 'Exodiff'
    input = '2D_convert_all_retain.i'
    cli_args = '--mesh-only'
    exodiff = '2D_convert_all_retain_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate peridynamic meshes for given
                   mesh blocks and retain the converted FE meshes.'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#11561'
  [../]

  [./3D_generate_sideset]
    type = 'Exodiff'
    input = '3D_sideset.i'
    cli_args = '--mesh-only'
    exodiff = '3D_sideset_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate sidesets using phantom FE elements
                   based on sidesets of FE meshes for 3D peridynamic meshes.'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#11561'
  [../]

  [./2D_3D_generate_sidesets_partial_boundary]
    type = 'Exodiff'
    input = '2D_3D_sidesets_partial_boundary.i'
    cli_args = '--mesh-only'
    exodiff = '2D_3D_sidesets_partial_boundary_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate sidesets using phantom FE elements
                   based on sidesets of mixed 2D and 3D FE meshes with partial boundary for sidesets.'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#17723'
  [../]

  [./2D_single_interface_block]
    type = 'Exodiff'
    input = '2D_single_interface_block.i'
    cli_args = '--mesh-only'
    exodiff = '2D_single_interface_block_in.e'
    recover = false
    map = false
    requirement = 'MeshGeneratorPD shall generate peridynamic meshes for given
                   mesh blocks and build interfacial bonds between specified mesh blocks.
                   Mesh blocks can be combined to a single mesh block for
                   both converted blocks and interface blocks'
    design = 'modules/peridynamics/MeshGeneratorPD.md'
    issues = '#11561'
  [../]
[]
